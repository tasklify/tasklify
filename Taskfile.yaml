version: "3"

dotenv:
  - configs/dev/.env

vars:
  organization_name: tasklify
  container_name: tasklify
  container_tag: latest

tasks:
  ## Golang, HTMX, Templ, TailwindCSS, YARN

  tidy:
    cmds:
      - go get -u ./...
      - go mod tidy

  dev:
    deps:
      - task: deps
    cmds:
      - npx tailwindcss -c configs/tailwind.config.js -i configs/input.css -o static/css/style.css --watch &
      - REGISTRY="" docker compose -f deployments/docker-compose.yml -p tasklify up &
      - air -c configs/dev/.air.toml

  build:
    deps:
      - task: deps
      - task: generate
    cmds:
      - docker buildx build -t {{.organization_name}}/{{.container_name}}:{{.container_tag}} -f build/server/Dockerfile .

  deps:
    internal: true
    cmds:
      - yarn
      - cmd: mkdir -p static/{css,script}
        platforms: [linux, darwin]
      - cmd: cp node_modules/htmx.org/dist/htmx.min.js static/script/.
        platforms: [linux, darwin]
      - cmd: cp node_modules/htmx.org/dist/ext/response-targets.js static/script/.
        platforms: [linux, darwin]
      - cmd: cp node_modules/github-markdown-css/github-markdown-light.css static/css/.
        platforms: [linux, darwin]
      - cmd: cp node_modules/apexcharts/dist/apexcharts.min.js static/script/.
        platforms: [linux, darwin]
      - cmd: rm -f tmp/main # Delete executable
        platforms: [linux, darwin]

      - cmd: powershell -Command "New-Item -ItemType Directory -Force -Path 'static\css', 'static\script'"
        platforms: [windows]
      - cmd: powershell -Command "Copy-Item -Path 'node_modules\htmx.org\dist\htmx.min.js', 'node_modules\htmx.org\dist\ext\response-targets.js', 'node_modules\apexcharts\dist\apexcharts.min.js' -Destination 'static\script\'"
        platforms: [windows]
      - cmd: powershell -Command "Copy-Item -Path 'node_modules\github-markdown-css\github-markdown-light.css' -Destination 'static\css\'"
        platforms: [windows]

  generate:
    internal: true
    cmds:
      - npx tailwindcss -c configs/tailwind.config.js -i configs/input.css -o static/css/style.css --minify
      - templ fmt .
      - templ generate -include-version=false
      - go generate ./...

  test:
    cmds:
      - go test -v ./tests/... -coverpkg=./internal/... -coverprofile=coverage_report
      - go tool cover -html=coverage_report

  ## Docker compose

  up:
    cmds:
      - docker compose -f deployments/docker-compose.yml -p tasklify --profile prod up -d {{.CLI_ARGS}}

  down:
    cmds:
      - docker compose -f deployments/docker-compose.yml -p tasklify down

  purge:
    cmds:
      - docker compose -f deployments/docker-compose.yml -p tasklify down --volumes
