name: Docker Build and Deploy

on:
  release:
    types: [published]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      ORGANIZATION_NAME: ${{ github.repository_owner }}
      IMAGE_NAME: ${{ github.repository }}

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install deps and generate files
        run: |
          go install github.com/go-task/task/v3/cmd/task@latest
          go install github.com/a-h/templ/cmd/templ@latest
          export PATH=${PATH}:`go env GOPATH`/bin
          task build

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: "build/server/Dockerfile"
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest

    needs: build-and-push-image

    steps:
      # https://shihadeh.dev/actions/Docker-Deployment/
      - name: Deploy to Docker Host
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: ${{ secrets.DOCKER_HOST }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          deployment_mode: docker-compose
          copy_stack_file: true
          deploy_path: ~/repos/tasklify
          stack_file_name: docker-compose.yaml
          keep_files: 5
          args: up -d
          docker_prune: "false"
          pull_images_first: "true"
