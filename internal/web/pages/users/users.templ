package users

import (
	"tasklify/internal/handlers"
	"tasklify/internal/database"
	"tasklify/internal/web/pages"
	"fmt"
	"net/http"
	"tasklify/internal/web/pages/users/slug"
)

func Users(w http.ResponseWriter, r *http.Request, params handlers.RequestParams) error {
	if !pages.IsAdmin(r) {
		return fmt.Errorf("unauthorized")
	}

	usersWithoutCaller, err := database.GetDatabase().GetFilteredUsers([]uint{params.UserID})
	if err != nil {
		return err
	}

	c := users(usersWithoutCaller)
	return pages.Layout(c, "Users", r).Render(r.Context(), w)
}

templ users(users []database.User) {
	<div class="bg-base-200 min-h-screen">
		<div class="p-10">
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
				<!-- Add New User -->
				<div class="card card-compact bg-base-100 shadow-xl hover:shadow-2xl transition-shadow flex justify-center items-center">
					<div class="flex justify-end items-end w-full">
						<a href="/docs/users#adding-users" target="_blank" class="help-button m-4" style="position: static;">?</a>
					</div>
					<div class="card-body">
						<h2 class="card-title">Add new user</h2>
						<div class="flex justify-center">
							<button class="btn btn-primary btn-circle btn-lg" hx-get="/users/new" hx-target="#dialog">
								<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4"></path>
								</svg>
							</button>
						</div>
					</div>
				</div>
				for _, user := range users {
					<div class="card card-compact bg-base-100 shadow-xl hover:shadow-2xl transition-shadow">
						<div class="card-body">
							<h2 class="card-title">{ user.FirstName } { user.LastName }</h2>
							<p class="whitespace-break-spaces">{ user.Username }</p>
							<p class="whitespace-break-spaces">{ user.Email }</p>
							<p class="whitespace-break-spaces">
								Last Login: { userSlug.LastLogin(&user) }
							</p>
							<p class="whitespace-break-spaces">Role: { user.SystemRole.Val }</p>
							<div class="card-actions justify-end">
								<button class="btn btn-warning" hx-get={ fmt.Sprintf("/users/%d/delete", user.ID) } hx-target="#dialog">Delete</button>
								<button class="btn btn-primary" hx-get={ fmt.Sprintf("/users/%d", user.ID) } hx-target="#dialog">Edit</button>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
}
