// Code generated by templ - DO NOT EDIT.

package login

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func login(title string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div hx-ext=\"response-targets\"><div id=\"create-dialog\" hx-ext=\"response-targets\" class=\"fixed top-0 left-0 w-full h-full bg-gray-900 bg-opacity-50 flex justify-center items-center z-50\"><form hx-post=\"/login\" hx-target-400=\"#validation-error\" class=\"bg-white rounded-lg p-8 shadow-lg w-2/5 h-auto\"><div class=\"text-center\"><h2 class=\"text-xl font-medium mb-4\">Sign in to your account</h2><!-- Username Field --><div class=\"mb-4\"><label for=\"username\" class=\"block text-sm font-medium text-gray-700\">Username</label> <input type=\"username\" name=\"username\" id=\"username\" placeholder=\"Username\" required=\"\" autocomplete=\"username\" class=\"input input-bordered input-primary w-full max-w-s mt-1\" required></div><!-- Password Field --><div class=\"mb-4\"><label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password</label> <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" required=\"\" autocomplete=\"current-password\" class=\"input input-bordered input-primary w-full max-w-s mt-1\" required></div>Donâ€™t have an account yet?\r <a href=\"/register\" class=\"text-secondary\">Register</a></div><div id=\"validation-error\"></div><div class=\"flex justify-end mt-3\"><button class=\"btn btn-ghost btn-sm mr-2\" hx-target=\"/\">Cancel</button> <button class=\"btn btn-primary btn-sm\" type=\"submit\">Sign In</button></div></form></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func loginError() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<p>Invalid username or password</p>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
