package sprintbacklog

import "tasklify/internal/database"
import "fmt"

// sprintBacklog.templ:
templ sprintBacklog(userStories []database.UserStory, allTasks []TaskWithUserStory, projectID uint) {
    <div class="bg-base-100 min-h-screen">
        <div class="container mx-auto p-4">
                    <!-- Back to Product Backlog Button -->
            <div class="mb-4">
              	<form hx-get="/productbacklog" hx-target="#dialog">
                  <input type="hidden" id="projectID" name="projectID" value={ fmt.Sprint(projectID) }/>
                  <button class="btn btn-primary btn-sm">Back To Product Backlog</button>
                </form>
            </div>
            <!-- User Stories -->
            for _, story := range userStories {
                <details class="mb-4 p-2 bg-base-200 rounded-box shadow-lg" open>
                    <summary class="cursor-pointer text-xl font-bold hover:bg-base-300 rounded p-2">
                        <div>{story.Title}</div>
                        <div class="text-sm text-gray-600">{*story.Description}</div>
                    </summary>
                    <div class="mt-2 pl-4">
                        <div class="overflow-x-auto">
                            <table class="table w-full table-zebra">
                                <!-- Table head for tasks -->
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Description</th>
                                        <th><a href="/sprintbacklog?sort=status">Status</a></th>
                                        <th>Assignee</th>
                                        <th>Details</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Task rows associated with this user story -->
                                    for _, task := range allTasks {
                                        if task.UserStoryID == story.ID {
                                            @taskRow(task)
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </details>
            }
        </div>
    </div>
}

templ taskRow(task TaskWithUserStory) {
    <tr>
      <td>{*task.Title}</td>
      <td>{*task.Description}</td>
      <td>
            switch *task.Status { 
                case database.StatusTodo:
                    <div class="badge badge-error">To do</div>
                case database.StatusInProgress:
                    <div class="badge badge-warning">In Progress</div>
                case database.StatusDone:
                    <div class="badge badge-success">Done</div>
                default:
                    <span class="badge badge-ghost">Unknown</span> 
            }
      </td>
      <td>switch task.AssignedTo {
            case "Unassigned":
                <div class="text-red-500">Unassigned</div>
            default:
                <div>{task.AssignedTo}</div>
      }
      </td>
      <td>
        <button class="btn btn-xs btn-primary">details</button>
      </td>
    </tr>
}
