package sprintbacklog

import "tasklify/internal/database"
import "fmt"
import "strconv"

// sprintBacklog.templ:
templ sprintBacklog(sprintID uint, sprint *database.Sprint, userMap map[uint]database.User) {
	<div class="bg-base-100 min-h-screen">
		<div class="container mx-auto p-4">
			<!-- Back to Product Backlog Button -->
			<div class="mb-4">
				<form hx-get="/productbacklog" hx-target="#whole">
					<input type="hidden" id="projectID" name="projectID" value={ fmt.Sprint(sprint.ProjectID) }/>
					<button class="btn btn-primary btn-sm">Back To Product Backlog</button>
				</form>
			</div>
			<!-- User Stories -->
			for _, story := range sprint.UserStories {
				<div class="collapse collapse-arrow border border-base-300 mb-4">
					<div class="collapse-title text-xl font-medium bg-base-300 text-base-500">
						<div>{ story.Title }</div>
						<div class="text-sm text-gray-600">{ *story.Description }</div>
					</div>
					<div class="card-body bg-base-100">
						<div class="flex justify-end">
							<!-- Create task Button -->
							<form hx-get="/create-task" hx-target="#dialog">
								<input type="hidden" id="userStoryID" name="userStoryID" value={ strconv.Itoa(int(story.ID)) }/>
								<input type="hidden" id="sprintID" name="sprintID" value={ strconv.Itoa(int(sprintID)) }/>
								<input type="hidden" id="projectID" name="projectID" value={ strconv.Itoa(int(sprint.ProjectID)) }/>
								<button class="btn btn-primary btn-sm ml-2">create Task</button>
							</form>
						</div>
						<div class="overflow-x-auto">
							<table class="table w-full table-zebra">
								<!-- Table head for tasks -->
								<thead>
									<tr>
										<th>Title</th>
										<th>Description</th>
										<th><a href="/sprintbacklog?sort=status">Status</a></th>
										<th>Assignee</th>
										<th>Details</th>
									</tr>
								</thead>
								<tbody>
									<!-- Task rows associated with this user story -->
									for _, task := range story.Tasks {
										@taskRow(task, userMap)
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			}
		</div>
	</div>
}

templ taskRow(task database.Task, userMap map[uint]database.User) {
	<tr>
		<td>{ *task.Title }</td>
		<td>{ *task.Description }</td>
		<td>
			switch *task.Status {
				case database.StatusTodo:
					<div class="badge badge-error">To do</div>
				case database.StatusInProgress:
					<div class="badge badge-warning">In Progress</div>
				case database.StatusDone:
					<div class="badge badge-success">Done</div>
				default:
					<span class="badge badge-ghost">Unknown</span>
			}
		</td>
		<td>
			switch task.UserID {
				case nil:
					<div class="text-red-500">Unassigned</div>
				default:
					<div>{ userMap[*task.UserID].Username }</div>
			}
		</td>
		<td>
			<button class="btn btn-xs">Details</button>
		</td>
	</tr>
}
