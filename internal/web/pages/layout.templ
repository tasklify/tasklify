package pages

import "net/http"
import "tasklify/internal/auth"
import "fmt"

templ Layout(contents templ.Component, title string, r *http.Request) {
	<html>
		<div id="whole">
			@header(title)
			<body id="root" class="flex flex-col h-full">
				@nav(r)
				<main class="flex-1">
					@contents
				</main>
				// Container for all dialogs
				<dialog id="dialog_container" class="modal">
					<div id="dialog" class="modal-dialog" hx-on::after-swap="dialog_container.showModal()" hx-ext="response-targets"></div>
				</dialog>
			</body>
			@footer()
		</div>
	</html>
}

templ header(title string) {
	<head>
		<meta charset="UTF-8"/>
		<title>{ title }</title>
		<link rel="icon" type="image/x-icon" href="/static/assets/favicon.ico"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		// If responseTargetUnsetsError=True, then response-targets extension always marks the request as successful even if it's not (e.g. because of validation error)
		// Read https://htmx.org/extensions/response-targets/ for further explanation
		<meta name="htmx-config" content='{"responseTargetUnsetsError": false}'/>
		<script src="/static/script/htmx.min.js"></script>
		<script src="/static/script/response-targets.js"></script>
		<link rel="stylesheet" href="/static/css/style.css"/>
	</head>
}

templ nav(r *http.Request) {
	<nav class="navbar bg-primary" hx-boost="true">
		<div class="navbar-start">
			<a
				class="btn btn-ghost text-xxl text-white"
				if isLoggedIn(r) {
					href="/dashboard"
				} else {
					href="/"
				}
			>
				tasklify
			</a>
			if isLoggedIn(r) {
				<a class="btn btn-sm m-0.5" href="/users">Users</a>
			}
		</div>
		<div class="navbar-end">
			if isLoggedIn(r) {
				<div class="dropdown dropdown-hover dropdown-bottom dropdown-end mr-2">
					<div tabindex="0" class="avatar max-w-full">
						<div class="w-12 h-12 rounded-full">
							<img src="/static/assets/tasklify_icon.svg"/>
						</div>
					</div>
					<ul tabindex="0" class="dropdown-content z-[10] menu p-2 shadow bg-base-100 rounded-box w-52">
						<li><a class="btn btn-sm m-0.5" hx-get={ userSettingsPath(r) } hx-target="#dialog">User settings</a></li>
						<li><a class="btn btn-sm m-0.5" hx-post="/logout">Logout</a></li>
					</ul>
				</div>
			} else if r.URL.Path != "/login" {
				<a class="btn btn-sm m-0.5" href="/login">Login</a>
			}
		</div>
	</nav>
}

templ footer() {
}

func isLoggedIn(r *http.Request) bool {
	sessionManager := auth.GetSession()
	_, err := sessionManager.GetUserID(r)

	isLoggedIn := err == nil // If error is nil, the user is considered logged in

	return isLoggedIn
}

func userSettingsPath(r *http.Request) string {
	sessionManager := auth.GetSession()
	userID, err := sessionManager.GetUserID(r)
	if err != nil {
		return ""
	}

	return fmt.Sprintf("/users/%d", userID)
}
