package pages

import "net/http"
import "tasklify/internal/auth"

templ Layout(contents templ.Component, title string, r *http.Request) {
	<!-- <!DOCTYPE html> -->
	<html>
		<div id="whole">
			@header(title)
			<body id="root" class="flex flex-col h-full">
				@nav(r)
				<main class="flex-1">
					@contents
				</main>
				// Container for all dialogs
				<dialog id="dialog_container" class="modal">
					<div id="dialog" class="modal-dialog" hx-on::after-swap="dialog_container.showModal()" hx-ext="response-targets"></div>
				</dialog>
			</body>
			@footer()
		</div>
	</html>
}

templ header(title string) {
	<head>
		<title>{ title }</title>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		// If responseTargetUnsetsError=True, then response-targets extension always marks the request as successful even if it's not (e.g. because of validation error)
		// Read https://htmx.org/extensions/response-targets/ for further explanation
		<meta name="htmx-config" content='{"responseTargetUnsetsError": false}'/>
		<script src="static/script/htmx.min.js"></script>
		<script src="static/script/response-targets.js"></script>
		<link rel="stylesheet" href="static/css/style.css"/>
	</head>
}

templ nav(r *http.Request) {
	<div class="navbar bg-primary">
		<div class="navbar-start">
			<a class="btn btn-ghost text-xxl text-white" href="/">tasklify</a>
		</div>
		<div class="navbar-end">
			if isLoggedIn(r) {
				<a class="btn btn-sm m-0.5" hx-post="/logout">Logout</a>
			} else {
				<a class="btn btn-sm m-0.5" hx-get="/login" hx-target="#dialog">Login</a>
				<a class="btn btn-sm m-0.5" href="/register">Register</a>
			}
		</div>
	</div>
}

templ footer() {
}

func isLoggedIn(r *http.Request) bool {
	sessionManager := auth.GetSession()
	_, err := sessionManager.GetUserID(r)

	isLoggedIn := err == nil // If there's no error, the user is considered logged in

	return isLoggedIn
}
