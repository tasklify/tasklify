package userstory

import "tasklify/internal/database"
import "strconv"

templ UserStoryDetailsDialog(us database.UserStory) {
	<div hx-ext="response-targets">
		<div id="create-dialog" hx-ext="response-targets" class="fixed top-0 left-0 w-full h-full bg-gray-900 bg-opacity-50 flex justify-center items-center z-50">
			<div class="bg-white rounded-lg p-8 shadow-lg w-2/5 h-auto">
				<!-- Title -->
				<div class="mb-4">
					<h2 class="text-xl font-bold mb-2">{ us.Title }</h2>
				</div>
				<div class="grid grid-cols-2 gap-4 mb-4">
					<div>
						<!-- Realized Status -->
						<div class="flex items-center gap-4 mb-4">
							<div class="font-medium">Realized:</div>
							<div>
								if *us.Realized {
									<span class="text-green-500 text-lg">
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
											<path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5"></path>
										</svg>
									</span> <!-- Display a check mark if realized is true -->
								} else {
									<span class="text-red-500 text-lg">
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
											<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12"></path>
										</svg>
									</span> <!-- Display a cross mark if realized is false -->
								}
							</div>
						</div>
						<!--Priority -->
						<div class="flex items-center gap-4 mb-4">
							<div class="font-medium">Priority:</div>
							<div>
								switch us.Priority {
									case database.PriorityMustHave:
										<div class="badge badge-error">Must have</div>
									case database.PriorityCouldHave:
										<div class="badge badge-warning">Could have</div>
									case database.PriorityShouldHave:
										<div class="badge badge-success">Should have</div>
									case database.PriorityWontHaveThisTime:
										<div class="badge badge-info">Won't have this time</div>
									default:
										<span></span>
								}
							</div>
						</div>
					</div>
					<div>
						<!--BusinessValue-->
						<div class="flex items-center gap-4 mb-4">
							<div class="font-medium">Business Value:</div>
							<div>
								<div class="badge badge-primary">{ strconv.Itoa(us.BusinessValue) }</div>
							</div>
						</div>
						<!--Story points-->
						<div class="flex items-center gap-4 mb-4">
							<div class="font-medium">Story Points:</div>
							<div>
								<div class="badge badge-primary">{ strconv.Itoa(int(us.StoryPoints)) }</div>
							</div>
						</div>
					</div>
				</div>
				<div class="mb-4">
					<div class="font-medium mb-2">Description</div>
					<div class="text-gray-800 break-words p-4 bg-gray-100 rounded-lg">{ *us.Description }</div>
				</div>
				<!--RejectionComment  -->
				if us.RejectionComment != nil {
					<div class="mb-4">
						<div class="font-medium mb-2">Rejection comment</div>
						<div class="text-gray-800 break-words p-4 bg-gray-100 rounded-lg">{ *us.RejectionComment }</div>
					</div>
				}
				<div class="flex justify-end mt-4 items-center">
					<button class="btn btn-primary btn-sm" type="button" hx-on:click="dialog_container.close()">Close</button>
				</div>
			</div>
		</div>
	</div>
}
