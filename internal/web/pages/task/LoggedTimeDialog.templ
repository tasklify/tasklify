package task

import "tasklify/internal/database"
import "fmt"
import "tasklify/internal/web/components/common"

templ LoggedTimeDialog(todayWS []database.WorkSession, otherWS []database.WorkSession, taskID uint, sprintID uint, task database.Task, currentUserID uint) {
	<div hx-ext="response-targets" id="logs-dialog">
		<div id="create-dialog" hx-ext="response-targets" class="fixed top-0 left-0 w-full h-full bg-gray-700 bg-opacity-60 flex justify-center items-center z-50">
			<form
				hx-target-400="#validation-error"
				hx-target-401="#validation-error"
				class="bg-white rounded-lg p-8 shadow-xl w-1/2 h-auto space-y-4"
			>
				<a href="/docs/logs#logs" target="_blank" class="help-button" style="padding-right=10rem;">?</a>
				<div class="text-center">
					<h2 class="text-2xl font-semibold text-gray-800 mb-6">Task Logs</h2>
					<div class="mb-4">
						if len(otherWS) != 0 {
							<h3 class="text-xl font-medium text-gray-700 mb-2 text-left">Past Logs</h3>
							<table class="w-full text-xs rounded-md" style="table-layout: fixed;">
								<thead class="bg-gray-200">
									<tr class="p-2">
										<th class="text-left p-2" style="width: 26%;">Date</th>
										<th class="text-left p-2" style="width: 20%;">Logged by</th>
										<th class="text-left p-2" style="width: 20%;">Duration</th>
										<th class="text-left p-2" style="width: 20px;">Remaining</th>
										<th class="text-left p-2" style="width: 14%;"></th>
									</tr>
								</thead>
								<tbody>
									for _, ws := range otherWS {
										<tr class="border-b">
											<td class="p-2">{ ws.StartTime.Format("02. 01. 2006") }</td>
											<td class="p-2">{ GetUserFirstAndLastNameFromID(ws.UserID) }</td>
											<td class="p-2">
												<div class="flex items-center">
													<div id={ fmt.Sprintf("today-container-%v", ws.ID) }>
														@DurationDialog(ws, sprintID, taskID, task, ws.UserID == currentUserID)
													</div>
													if ws.LeftUnfinished {
														<div class="pl-2">
															<div class="cursor-pointer" hx-get={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/unfinished", sprintID, taskID, ws.ID) }>
																<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
																	<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
																</svg>
															</div>
														</div>
													}
												</div>
											</td>
											<td class="p-2">
												<div id={ fmt.Sprintf("remaining-container-%v", ws.ID) }>
													@RemainingDialog(ws, sprintID, taskID, task, ws.UserID == currentUserID)
												</div>
											</td>
											<td style="display: flex; justify-content: flex-end; margin-right: 3px; margin-top: 3px;">
												if ws.UserID == currentUserID {
													<div class="ml-2">
														<button hx-delete={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/stop", sprintID, taskID, ws.ID) } hx-confirm="Are you sure you want to delete this log?" hx-target="#dialog" class="btn btn-xs bg-primary" style="position: relative; z-index: 1;">
															<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="white" class="w-5 h-5">
																<path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 0 0 6 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 1 0 .23 1.482l.149-.022.841 10.518A2.75 2.75 0 0 0 7.596 19h4.807a2.75 2.75 0 0 0 2.742-2.53l.841-10.52.149.023a.75.75 0 0 0 .23-1.482A41.03 41.03 0 0 0 14 4.193V3.75A2.75 2.75 0 0 0 11.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 0 0-1.5.06l.3 7.5a.75.75 0 1 0 1.5-.06l-.3-7.5Zm4.34.06a.75.75 0 1 0-1.5-.06l-.3 7.5a.75.75 0 1 0 1.5.06l.3-7.5Z" clip-rule="evenodd"></path>
															</svg>
														</button>
													</div>
												} else {
													<div class="ml-2" title="This log was not made by you, so you cannot delete it.">
														<button hx-delete={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/stop", sprintID, taskID, ws.ID) } hx-confirm="Are you sure you want to delete this log?" hx-target="#dialog" class="btn btn-xs bg-primary" style="position: relative; z-index: 1;" disabled>
															<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="white" class="w-5 h-5">
																<path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 0 0 6 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 1 0 .23 1.482l.149-.022.841 10.518A2.75 2.75 0 0 0 7.596 19h4.807a2.75 2.75 0 0 0 2.742-2.53l.841-10.52.149.023a.75.75 0 0 0 .23-1.482A41.03 41.03 0 0 0 14 4.193V3.75A2.75 2.75 0 0 0 11.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 0 0-1.5.06l.3 7.5a.75.75 0 1 0 1.5-.06l-.3-7.5Zm4.34.06a.75.75 0 1 0-1.5-.06l-.3 7.5a.75.75 0 1 0 1.5.06l.3-7.5Z" clip-rule="evenodd"></path>
															</svg>
														</button>
													</div>
												}
											</td>
										</tr>
									}
								</tbody>
							</table>
						}
					</div>
					<div style="display: flex; justify-content: flex-start; margin-bottom: 10px; margin-top: -5px;">
						<button class="btn btn-primary btn-xs" hx-get={ fmt.Sprintf("/sprintbacklog/%v/task/%v/add", sprintID, taskID) } hx-target="#dialog">Add past log</button>
					</div>
					<div class="mb-4">
						<h3 class="text-xl font-medium text-gray-700 mb-2 text-left">Today's log</h3>
						if len(todayWS) == 0 {
							<div class="text-center py-4">You have not started a log today. Click Start to begin one.</div>
							if len(otherWS) != 0 && otherWS[len(otherWS)-1].Remaining == 0 {
								<div class="text-center button-container" title="Remaining time for this task is 0 so another log cannot be started.">
									<button class="btn btn-primary btn-sm" hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/start", sprintID, taskID) } hx-target="#logs-dialog" disabled>Start</button>
								</div>
							} else {
								<div class="text-center">
									<button class="btn btn-primary btn-sm" hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/start", sprintID, taskID) } hx-target="#logs-dialog">Start</button>
								</div>
							}
						} else {
							<table class="w-full text-xs rounded-md" style="table-layout: fixed;">
								<thead class="bg-gray-200">
									<tr>
										<th class="text-left p-2" style="width: 26%;">Date</th>
										<th class="text-left p-2" style="width: 20%;">Logged by</th>
										<th class="text-left p-2" style="width: 20%;">Duration</th>
										<th class="text-left p-2" style="width: 20%;">Remaining</th>
										<th class="text-left p-2" style="width: 14%;"></th>
									</tr>
								</thead>
								for _, ws := range todayWS {
									<tbody>
										if ws.EndTime == nil {
											<tr class="border-b">
												<td class="p-2">{ ws.StartTime.Format("02. 01. 2006") }</td>
												<td class="p-2">{ GetUserFirstAndLastNameFromID(ws.UserID) }</td>
												<td class="p-2"></td>
												<td class="p-2">
													<div>ongoing</div>
												</td>
												<td style="display: flex; justify-content: flex-end; margin-right: 3px; margin-top: 3px;">
													<button class="btn btn-primary btn-xs" hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/stop", sprintID, taskID, ws.ID) } hx-target="#logs-dialog">
														Stop
													</button>
													<div class="ml-2">
														<button hx-delete={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/stop", sprintID, taskID, ws.ID) } hx-confirm="Are you sure you want to delete this log?" hx-target="#dialog" class="btn btn-xs bg-primary" style="position: relative; z-index: 1;" disabled>
															<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="white" class="w-5 h-5">
																<path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 0 0 6 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 1 0 .23 1.482l.149-.022.841 10.518A2.75 2.75 0 0 0 7.596 19h4.807a2.75 2.75 0 0 0 2.742-2.53l.841-10.52.149.023a.75.75 0 0 0 .23-1.482A41.03 41.03 0 0 0 14 4.193V3.75A2.75 2.75 0 0 0 11.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 0 0-1.5.06l.3 7.5a.75.75 0 1 0 1.5-.06l-.3-7.5Zm4.34.06a.75.75 0 1 0-1.5-.06l-.3 7.5a.75.75 0 1 0 1.5.06l.3-7.5Z" clip-rule="evenodd"></path>
															</svg>
														</button>
													</div>
												</td>
											</tr>
										} else {
											<tr class="border-b">
												<td class="p-2">{ ws.StartTime.Format("02. 01. 2006") }</td>
												<td class="p-2">{ GetUserFirstAndLastNameFromID(ws.UserID) }</td>
												<td class="p-2" id={ fmt.Sprintf("today-container-%v", ws.ID) }>
													@DurationDialog(ws, sprintID, taskID, task, ws.UserID == currentUserID)
												</td>
												<td class="p-2">
													<div id={ fmt.Sprintf("remaining-container-%v", ws.ID) }>
														@RemainingDialog(ws, sprintID, taskID, task, ws.UserID == currentUserID)
													</div>
												</td>
												<td style="display: flex; justify-content: flex-end; margin-right: 3px; margin-top: 3px;">
													<div
														if task.Status.Val == database.StatusDone.Val {
															title="Remaining time for this task is 0 so log cannot be resumed"
														}
													>
														<button
															class="btn btn-primary btn-xs"
															hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/resume", sprintID, taskID, ws.ID) }
															hx-target="#logs-dialog"
															if task.Status.Val == database.StatusDone.Val {
																disabled
															}
														>Resume</button>
													</div>
													<div class="ml-2">
														<button hx-delete={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/stop", sprintID, taskID, ws.ID) } hx-confirm="Are you sure you want to delete this log?" hx-target="#dialog" class="btn btn-xs bg-primary" style="position: relative; z-index: 1;">
															<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="white" class="w-5 h-5">
																<path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 0 0 6 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 1 0 .23 1.482l.149-.022.841 10.518A2.75 2.75 0 0 0 7.596 19h4.807a2.75 2.75 0 0 0 2.742-2.53l.841-10.52.149.023a.75.75 0 0 0 .23-1.482A41.03 41.03 0 0 0 14 4.193V3.75A2.75 2.75 0 0 0 11.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 0 0-1.5.06l.3 7.5a.75.75 0 1 0 1.5-.06l-.3-7.5Zm4.34.06a.75.75 0 1 0-1.5-.06l-.3 7.5a.75.75 0 1 0 1.5.06l.3-7.5Z" clip-rule="evenodd"></path>
															</svg>
														</button>
													</div>
												</td>
											</tr>
										}
									</tbody>
								}
							</table>
						}
					</div>
				</div>
				// if task.Status.Val != database.StatusDone.Val {
				// 	if (len(todayWS) != 0  && todayWS[0].Remaining == 0) || (len(todayWS) == 0  && len(otherWS) != 0  && otherWS[len(otherWS)-1].Remaining == 0) {
				// 		<div>
				// 			<button class="btn btn-warning btn-sm" type="button" hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/end", sprintID, taskID) } hx-target="#whole">End Task</button>
				// 		</div>
				// 	} else {
				// 		<div class="btn-container" title="Remaining time for this task is not 0.">
				// 			<button class="btn btn-warning btn-sm" type="button" hx-get={ fmt.Sprintf("/sprintbacklog/%v", sprintID) } hx-target="#whole" disabled>End Task</button>
				// 		</div>
				// 	}
				// }
				if (len(todayWS) != 0  && todayWS[0].Remaining == 0) || (len(todayWS) == 0  && len(otherWS) != 0  && otherWS[len(otherWS)-1].Remaining == 0) {
					<div class="bg-blue-100 border rounded-2xl border-blue-400 text-black px-4 py-3">
						<span>This task is done because remaining time is zero. To make it active again, change the remaining time.</span>
					</div>
				}
				<div id="validation-error-logtime"></div>
				<div class="flex justify-end mt-3">
					<button class="btn btn-ghost btn-sm mr-2" type="button" hx-on:click="dialog_container.close(); location.reload()">Close</button>
				</div>
			</form>
		</div>
	</div>
}

templ ChangeDurationDialog(ws database.WorkSession, sprintID uint, taskID uint, task database.Task) {
	<form id="duration-info" style="margin-bottom: -4px; margin-top: -4px;" hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/change", sprintID, taskID, ws.ID) } hx-target="#logs-dialog" hx-target-303="#validation-error-logtime" class="flex">
		<input type="text" name="duration" id="duration" value={ fmt.Sprintf("%v", common.FormatDuration(ws.Duration)) } class="input input-bordered input-xs" title="Enter duration in the format: XhXXm. Example: 1h30m for 1 hour and 30 minutes." style="width: 4.5rem; text-align: center;"/>
		<button class="btn btn-primary btn-xs ml-1" type="submit">
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 15" fill="currentColor" width="15px" height="15px">
				<path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7 7a.75.75 0 0 1-1.06 0l-3.5-3.5a.75.75 0 1 1 1.06-1.06L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0z"></path>
			</svg>
		</button>
	</form>
}

templ DurationDialog(ws database.WorkSession, sprintID uint, taskID uint, task database.Task, isCreator bool) {
	if isCreator {
		<div class="input input-bordered input-ghost input-xs" hx-get={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/change", sprintID, taskID, ws.ID) } hx-target={ fmt.Sprintf("#today-container-%v", ws.ID) } hx-swap="innerHTML" id="today-container" style="width: 4.5rem; text-align: center; padding-top: 2px; margin-bottom: -4px; margin-top: -4px;">
			{ templ.JoinStringErrs(common.FormatDuration(ws.Duration)) }
		</div>
	} else {
		<div class="input input-bordered input-disabled input-xs" id="today-container" style="width: 4.5rem; text-align: center; padding-top: 2px; margin-bottom: -4px; margin-top: -4px;" title="This log was not made by you, so you cannot edit it.">
			{ templ.JoinStringErrs(common.FormatDuration(ws.Duration)) }
		</div>
	}
}

templ UnfinishedSessionDialog(sprintID uint, taskID uint) {
	<dialog open class="modal">
		<div class="p-2 max-w-sm bg-white rounded-lg border shadow-md">
			<p class="text-sm">
				This log was not ended on the day it was started, so it stopped automatically at midnight. Click on the duration if you wish to edit it.
			</p>
			<form hx-get={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions", sprintID, taskID) } hx-target="#dialog" class="mb-0">
				<button class="mt-2 px-4 py-1 bg-blue-500 text-white rounded hover:bg-blue-700">Okay</button>
			</form>
		</div>
	</dialog>
}

templ ChangeRemainingDialog(ws database.WorkSession, sprintID uint, taskID uint, task database.Task) {
	<form style="margin-bottom: -4px; margin-top: -4px;" hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/changeremaining", sprintID, taskID, ws.ID) } hx-target="#logs-dialog" hx-target-303="#validation-error-logtime" class="flex">
		<input type="text" name="remaining" id="remaining" value={ fmt.Sprintf("%v", common.FormatDuration(ws.Remaining)) } class="input input-bordered input-xs" title="Enter remaining duration in the format: XhXXm. Example: 1h30m for 1 hour and 30 minutes." style="width: 4.5rem; text-align: center;"/>
		<button class="btn btn-primary btn-xs ml-1" type="submit">
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 15" fill="currentColor" width="15px" height="15px">
				<path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7 7a.75.75 0 0 1-1.06 0l-3.5-3.5a.75.75 0 1 1 1.06-1.06L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0z"></path>
			</svg>
		</button>
	</form>
}

templ RemainingDialog(ws database.WorkSession, sprintID uint, taskID uint, task database.Task, isCreator bool) {
	if isCreator {
		<div class="input input-bordered input-ghost input-xs" hx-get={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions/%v/changeremaining", sprintID, taskID, ws.ID) } hx-target={ fmt.Sprintf("#remaining-container-%v", ws.ID) } hx-swap="innerHTML" id="remaining-container" style="width: 4.5rem; text-align: center; padding-top: 2px; margin-bottom: -4px; margin-top: -4px;">
			{ templ.JoinStringErrs(common.FormatDuration(ws.Remaining)) }
		</div>
	} else {
		<div class="input input-bordered input-disabled input-xs" id="remaining-container" style="width: 4.5rem; text-align: center; padding-top: 2px; margin-bottom: -4px; margin-top: -4px;" title="This log was not made by you, so you cannot edit it.">
			{ templ.JoinStringErrs(common.FormatDuration(ws.Remaining)) }
		</div>
	}
}

templ createWorkSessionDialog(sprintID uint, taskID uint) {
	<div hx-ext="response-targets" id="wscreate-dialog">
		<div id="create-dialog" hx-ext="response-targets" class="fixed top-0 left-0 w-full h-full bg-gray-700 bg-opacity-60 flex justify-center items-center z-50">
			<form
				hx-target="#wscreate-dialog"
				hx-target-303="#validation-error"
				class="bg-white rounded-lg p-8 shadow-xl w-1/2 h-auto space-y-4"
				hx-post={ fmt.Sprintf("/sprintbacklog/%v/task/%v/add", sprintID, taskID) }
			>
				<a href="/docs/logs#logs" target="_blank" class="help-button" style="padding-right=10rem;">?</a>
				<!-- Start Date Field -->
				<div class="mb-4">
					<label for="start_date" class="block text-sm font-medium text-gray-700">Start Date</label>
					<input type="date" id="start_date" name="start_date" class="input input-bordered input-primary w-full max-w-s mt-1" required/>
				</div>
				<div class="mb-4">
					<label for="duration" class="block text-sm font-medium text-gray-700">Duration (hours)</label>
					<input type="number" step="0.01" id="duration" name="duration" class="input input-bordered input-primary w-full max-w-s mt-1" min="0.01" max="24" required/>
				</div>
				<div class="mb-4">
					<label for="duration" class="block text-sm font-medium text-gray-700">Estimated remaining time (hours)</label>
					<input type="number" step="0.01" id="remaining" name="remaining" class="input input-bordered input-primary w-full max-w-s mt-1" min="0.01" required/>
				</div>
				<div id="validation-error"></div>
				<div class="flex justify-end mt-3">
					<button class="btn btn-primary" type="submit">Add log</button>
					<button class="btn btn-ghost" type="button" hx-get={ fmt.Sprintf("/sprintbacklog/%v/task/%v/sessions", sprintID, taskID) } hx-target="#dialog">Close</button>
				</div>
			</form>
		</div>
	</div>
}
