
package form

templ PasswordField() {
	// Password
	<div class="form-control">
		<label class="label">
			<span class="label-text">Password</span>
		</label>
		<div class="relative">
			<input type="password" name="password" id="password" placeholder="Password" required="" autocomplete="current-password" class="input input-bordered w-full pr-16" required minlength="12" maxlength="128" required="" oninput="if(this.value.length > 64) this.value = this.value.slice(0, 128);" oncopy="return false;"/>
			<button type="button" id="password-toggle-button" onclick="togglePasswordVisibility()" class="absolute inset-y-0 right-0 px-4 flex items-center text-sm font-medium leading-5 text-gray-700">
				<!-- Initial SVG (show eye) will be injected by the script on page load -->
			</button>
		</div>
		// Password meter
		<div id="password-strength-meter" class="h-2 bg-gray-200 rounded-full dark:bg-gray-700 mt-2">
			<div id="password-strength-bar" class="h-full rounded-full w-0"></div>
		</div>
	</div>
	// Show/hide password
	<script>
		function showEye() {
			return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" width="17" height="17">
				<path stroke-linecap="round" stroke-linejoin="round" d="M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.242 4.242L9.88 9.88"></path>
			</svg>`
		}

		function hideEye() {
			return `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" width="17" height="17">
				<path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z"></path>
				<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
			</svg>`
		}

 		function togglePasswordVisibility() {
			var passwordInput = document.getElementById('password');
			var button = document.getElementById('password-toggle-button');
			if (passwordInput.type === "password") {
				passwordInput.type = "text";
				button.innerHTML = hideEye();
			} else {
				passwordInput.type = "password";
				button.innerHTML = showEye();
			}
		}

		  // Initialize the button with the 'show' eye icon
    	document.getElementById('password-toggle-button').innerHTML = showEye();
	</script>
	// Password meter
	<script>
        document.getElementById('password').addEventListener('input', function(e) {
            var passwordStrength = calculatePasswordStrength(e.target.value);
            var strengthBar = document.getElementById('password-strength-bar');
            // Adjust the color based on strength
            if (passwordStrength < 33) {
                strengthBar.style.backgroundColor = '#ff3e3e'; // Red for weak
            } else if (passwordStrength < 66) {
                strengthBar.style.backgroundColor = '#ffc107'; // Yellow for moderate
            } else {
                strengthBar.style.backgroundColor = '#4caf50'; // Green for strong
            }
            strengthBar.style.width = passwordStrength + '%';
        });

        function calculatePasswordStrength(password) {
            var strengthPoints = 0;
            if (!password) {
                return 0;
            }

            if (password.length < 12) {
                return 0
            }

            // Criteria
            var lengthCriteria = password.length >= 12;
            var upperCaseCriteria = /[A-Z]/.test(password);
            var lowerCaseCriteria = /[a-z]/.test(password);
            var numberCriteria = /[0-9]/.test(password);
            var specialCharCriteria = /[^A-Za-z0-9]/.test(password);
            
            // Increment strength points for each met criteria
            if (lengthCriteria) strengthPoints += password.length;
            if (upperCaseCriteria) strengthPoints += 12;
            if (lowerCaseCriteria) strengthPoints += 12;
            if (numberCriteria) strengthPoints += 12;
            if (specialCharCriteria) strengthPoints += 12;

            // Cap the strength points at 100
            strengthPoints = Math.min(strengthPoints, 100);

            return strengthPoints;
        }
    </script>
}
