services:
  tasklify:
    image: ${REGISTRY}tasklify/tasklify:latest
    container_name: tasklify
    restart: always
    profiles: ["prod"]
    networks:
      - reverse-proxy
      - tasklify-internal
    ports:
      - "8080:8080"
    environment:
      TASKLIFY_ADMIN_USERNAME: ${TASKLIFY_ADMIN_USERNAME}
      TASKLIFY_ADMIN_PASSWORD: ${TASKLIFY_ADMIN_PASSWORD}

      TASKLIFY_AUTH_SESSION_HASH_KEY: ${TASKLIFY_AUTH_SESSION_HASH_KEY}
      TASKLIFY_AUTH_SESSION_ENCRYPTION_KEY: ${TASKLIFY_AUTH_SESSION_ENCRYPTION_KEY}
      TASKLIFY_AUTH_SYMCRYPT_KEY: ${TASKLIFY_AUTH_SYMCRYPT_KEY}

      TASKLIFY_DATABASE_HOST: ${TASKLIFY_DATABASE_HOST}
      TASKLIFY_DATABASE_NAME: ${TASKLIFY_DATABASE_NAME}
      TASKLIFY_DATABASE_USER: ${TASKLIFY_DATABASE_USER}
      TASKLIFY_DATABASE_PASSWORD: ${TASKLIFY_DATABASE_PASSWORD}
    depends_on:
      tasklify-postgres:
        condition: service_healthy

  tasklify-postgres:
    image: postgres:16-alpine
    container_name: tasklify-postgres
    restart: always
    networks:
      - tasklify-internal
    ports:
      - "5432:5432"
    volumes:
      - tasklify-db:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_DB: ${TASKLIFY_DATABASE_NAME}
      POSTGRES_PASSWORD: ${TASKLIFY_DATABASE_PASSWORD}
      POSTGRES_USER: ${TASKLIFY_DATABASE_USER}
    command: postgres -c 'max_connections=50000'
    healthcheck:
      interval: 10s
      retries: 10
      test: pg_isready -U ${TASKLIFY_DATABASE_USER} -d ${TASKLIFY_DATABASE_NAME}
      timeout: 2s

  tasklify-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tasklify-pgadmin
    restart: always
    networks:
      - tasklify-internal
    ports:
      - "5000:80"
    volumes:
      - tasklify-pgadmin:/var/lib/pgadmin:rw
    environment:
      PGADMIN_DEFAULT_EMAIL: ${TASKLIFY_PGADMIN_EMAIL_USER}@${TASKLIFY_PGADMIN_EMAIL_DOMAIN}
      PGADMIN_DEFAULT_PASSWORD: ${TASKLIFY_PGADMIN_PASSWORD}
      PGADMIN_DISABLE_POSTFIX: true
      CONSOLE_LOG_LEVEL: WARNING
    entrypoint: >
      /bin/sh -c "
      mkdir -p /var/lib/pgadmin/storage/${TASKLIFY_PGADMIN_EMAIL_USER}_${TASKLIFY_PGADMIN_EMAIL_DOMAIN};
      cp /tmp/pgpass /var/lib/pgadmin/storage/${TASKLIFY_PGADMIN_EMAIL_USER}_${TASKLIFY_PGADMIN_EMAIL_DOMAIN}/pgpass;
      chmod 600 /var/lib/pgadmin/storage/${TASKLIFY_PGADMIN_EMAIL_USER}_${TASKLIFY_PGADMIN_EMAIL_DOMAIN}/pgpass;
      /entrypoint.sh;
      "
    user: root
    depends_on:
      tasklify-postgres:
        condition: service_healthy
    configs:
      - source: config_local.py
        target: /pgadmin4/config_local.py
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /tmp/pgpass
        mode: 0666

configs:
  config_local.py:
    content: |
      import logging

      CONSOLE_LOG_LEVEL: logging.WARNING
      FILE_LOG_LEVEL = logging.WARNING
  pgpass:
    content: tasklify-postgres:5432:${TASKLIFY_DATABASE_NAME}:${TASKLIFY_DATABASE_USER}:${TASKLIFY_DATABASE_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Name": "tasklify-db",
        "Group": "Servers",
        "Host": "tasklify-postgres",
        "Port": 5432,
        "MaintenanceDB": "${TASKLIFY_DATABASE_NAME}",
        "Username": "${TASKLIFY_DATABASE_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

networks:
  reverse-proxy:
    external: true
  tasklify-internal:
    name: tasklify-internal

volumes:
  tasklify-db:
    name: tasklify-db
  tasklify-pgadmin:
    name: tasklify-pgadmin
